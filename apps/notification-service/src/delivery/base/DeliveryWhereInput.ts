/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AuditListRelationFilter } from "../../audit/base/AuditListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { ChannelWhereUniqueInput } from "../../channel/base/ChannelWhereUniqueInput";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { EnumDeliveryDeliveryStatus } from "./EnumDeliveryDeliveryStatus";
import { StringFilter } from "../../util/StringFilter";
import { MessageWhereUniqueInput } from "../../message/base/MessageWhereUniqueInput";

@InputType()
class DeliveryWhereInput {
  @ApiProperty({
    required: false,
    type: () => AuditListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AuditListRelationFilter)
  @IsOptional()
  @Field(() => AuditListRelationFilter, {
    nullable: true,
  })
  audits?: AuditListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ChannelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ChannelWhereUniqueInput)
  @IsOptional()
  @Field(() => ChannelWhereUniqueInput, {
    nullable: true,
  })
  channel?: ChannelWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  deliveredAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumDeliveryDeliveryStatus,
  })
  @IsEnum(EnumDeliveryDeliveryStatus)
  @IsOptional()
  @Field(() => EnumDeliveryDeliveryStatus, {
    nullable: true,
  })
  deliveryStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MessageWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MessageWhereUniqueInput)
  @IsOptional()
  @Field(() => MessageWhereUniqueInput, {
    nullable: true,
  })
  message?: MessageWhereUniqueInput;
}

export { DeliveryWhereInput as DeliveryWhereInput };
