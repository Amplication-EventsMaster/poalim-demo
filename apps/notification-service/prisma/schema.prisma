datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Template {
  content   String?
  createdAt DateTime  @default(now())
  createdBy String?
  id        String    @id @default(cuid())
  messages  Message[]
  name      String?
  updatedAt DateTime  @updatedAt
}

model Message {
  audits     Audit[]
  body       String?
  createdAt  DateTime           @default(now())
  deliveries Delivery[]
  id         String             @id @default(cuid())
  status     EnumMessageStatus?
  subject    String?
  template   Template?          @relation(fields: [templateId], references: [id])
  templateId String?
  updatedAt  DateTime           @updatedAt
}

model Audit {
  action      String?
  createdAt   DateTime  @default(now())
  delivery    Delivery? @relation(fields: [deliveryId], references: [id])
  deliveryId  String?
  id          String    @id @default(cuid())
  message     Message?  @relation(fields: [messageId], references: [id])
  messageId   String?
  performedAt DateTime?
  performedBy String?
  updatedAt   DateTime  @updatedAt
}

model Delivery {
  audits         Audit[]
  channel        Channel?                    @relation(fields: [channelId], references: [id])
  channelId      String?
  createdAt      DateTime                    @default(now())
  deliveredAt    DateTime?
  deliveryStatus EnumDeliveryDeliveryStatus?
  id             String                      @id @default(cuid())
  message        Message?                    @relation(fields: [messageId], references: [id])
  messageId      String?
  updatedAt      DateTime                    @updatedAt
}

model Channel {
  configField Json?
  createdAt   DateTime              @default(now())
  deliveries  Delivery[]
  id          String                @id @default(cuid())
  typeField   EnumChannelTypeField?
  updatedAt   DateTime              @updatedAt
}

enum EnumMessageStatus {
  Option1
}

enum EnumDeliveryDeliveryStatus {
  Option1
}

enum EnumChannelTypeField {
  Option1
}
